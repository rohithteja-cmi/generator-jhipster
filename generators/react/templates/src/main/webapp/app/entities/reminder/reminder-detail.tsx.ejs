import React, { useEffect } from 'react';
import { Link, useParams } from 'react-router-dom';
import { Button, Row, Col } from 'reactstrap';
import { Translate, TextFormat } from 'react-jhipster';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';

import { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';
import { useAppDispatch, useAppSelector } from 'app/config/store';

import { getEntity } from './reminder.reducer';

export const ReminderDetail = () => {
  const dispatch = useAppDispatch();

  const { id } = useParams<'id'>();

  useEffect(() => {
    dispatch(getEntity(id));
  }, []);

  const reminderEntity = useAppSelector(state => state.<%= baseName.toLowerCase() %>.reminder.entity);
  return (
    <Row>
      <Col md="8">
        <h2>
          Reminder
        </h2>
        <dl className="jh-entity-details">
          <dt>
            <span id="id">
              Id
            </span>
          </dt>
          <dd>{reminderEntity.id}</dd>
          <dt>
            <span id="name">
              Name
            </span>
          </dt>
          <dd>{reminderEntity.name}</dd>
          <dt>
            <span id="event">
              Event
            </span>
          </dt>
          <dd>{reminderEntity.event}</dd>
          <dt>
            <span id="date">
              Date
            </span>
          </dt>
          <dd>{reminderEntity.date ? <TextFormat value={reminderEntity.date} type="date" format={APP_LOCAL_DATE_FORMAT} /> : null}</dd>
          <dt>
            <span id="createdBy">
              Created By
            </span>
          </dt>
          <dd>{reminderEntity.createdBy}</dd>
          <dt>
            <span id="updatedBy">
              Updated By
            </span>
          </dt>
          <dd>{reminderEntity.updatedBy}</dd>
          <dt>
            <span id="createdAt">
              Created At
            </span>
          </dt>
          <dd>{reminderEntity.createdAt}</dd>
          <dt>
            <span id="updatedAt">
             Updated At
            </span>
          </dt>
          <dd>{reminderEntity.updatedAt}</dd>
        </dl>
        <Button tag={Link} to="/reminder" replace color="info" data-cy="entityDetailsBackButton">
          <FontAwesomeIcon icon="arrow-left" />{' '}
          <span className="d-none d-md-inline">
            Back
          </span>
        </Button>
        &nbsp;
        <Button tag={Link} to={`/reminder/${reminderEntity.id}/edit`} replace color="primary">
          <FontAwesomeIcon icon="pencil-alt" />{' '}
          <span className="d-none d-md-inline">
            Edit
          </span>
        </Button>
      </Col>
    </Row>
  );
};

export default ReminderDetail;
