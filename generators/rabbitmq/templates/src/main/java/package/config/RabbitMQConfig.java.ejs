package <%= packageName %>.config;

import org.springframework.amqp.core.*;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.Jackson2JsonMessageConverter;
import org.springframework.amqp.support.converter.MessageConverter;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;


@Configuration
public class RabbitMQConfig<%= uniqueName %> {

    public static final String QUEUE = "<%= queueName %>_message_queue";
    public static final String EXCHANGE = "<%= queueName %>_message_exchange";
    public static final String ROUTING_KEY = "<%= queueName %>_message_routingKey";

    @Bean
    public Queue queue<%= uniqueName %>() {
        return new Queue(QUEUE);
    }

    @Bean
    public TopicExchange exchange<%= uniqueName %>() {
        return new TopicExchange(EXCHANGE);
    }

    @Bean
    public Binding binding<%= uniqueName %>() {
        return BindingBuilder
            .bind(this.queue<%= uniqueName %>())
            .to(this.exchange<%= uniqueName %>())
            .with(ROUTING_KEY);
    }

    @Bean
    public MessageConverter messageConverter() {
        return new Jackson2JsonMessageConverter();
    }

    @Bean
    public AmqpTemplate template(ConnectionFactory connectionFactory) {
        RabbitTemplate template = new RabbitTemplate(connectionFactory);
        template.setMessageConverter(messageConverter());
        return template;
    }
}
